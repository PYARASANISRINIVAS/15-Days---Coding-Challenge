


https://leetcode.com/problems/kids-with-the-greatest-number-of-candies/description/











class Solution {
    public List<Boolean> kidsWithCandies(int[] candies, int extraCandies) {
        List<Boolean> ans=new ArrayList<>();
        for(int i=0;i<candies.length;i++){
            int temp=0;
            for(int j=0;j<candies.length;j++){
                if((candies[i]+extraCandies)<candies[j] && i!=j){
                    ans.add(false);
                    temp=1;
                    break;
                }
            }
            if(temp==0)
                ans.add(true);
        }
        return ans;
    }
}








class Solution {
    public static int maxElement(int candies[]){
        int max=Integer.MIN_VALUE;
        for(int i=0;i<candies.length;i++){
            if(candies[i]>max){
                max=candies[i];
            }
        }
        return max;
    }
    public List<Boolean> kidsWithCandies(int[] candies, int extraCandies) {
        ArrayList<Boolean> ans=new ArrayList<>();
        int max=maxElement(candies);
        for(int i=0;i<candies.length;i++){
            if(candies[i]+extraCandies>=max){
                ans.add(true);
            }
            else{
                ans.add(false);
            }
        }
        return ans;
    }
}












class Solution {
    public List<Boolean> kidsWithCandies(int[] candies, int extraCandies) {
        ArrayList<Boolean> list=new ArrayList<>();
        int max=0;
        for(int i=0;i<candies.length;i++){
           if(candies[i]>candies[max]){
               max=i;
           }
        }
        max=candies[max];
        for(int i=0;i<candies.length;i++){
            list.add((candies[i]+extraCandies)>=max);
        }
        return list;
    }
}